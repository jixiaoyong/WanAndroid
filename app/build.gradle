apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

static def releaseTime() {
    return new Date(System.currentTimeMillis()).format("yyyyMMdd")
}

android {
    compileSdkVersion rootProject.targetSdkVersion
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "io.github.jixiaoyong.wanandroid"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode Integer.parseInt(releaseTime())
        versionName "2.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }

        debug {
            minifyEnabled false

        }
    }

    lintOptions {
        // 停止lint在build时检查
        abortOnError false
    }

    productFlavors.all {
        flavor ->
            flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name
                                           , APP_KEY          : UMENG_APP_KEY
            ]
    }

    // 解决flavor Dimensions问题  http://blog.csdn.net/syif88/article/details/75009663
    flavorDimensions "versionCode"

    // 格式化输出文件名称
    applicationVariants.all { variant ->
        variant.outputs.all {
            /*渠道名: ${variant.flavorName}-*/
            outputFileName = "WanAndroid-v${variant.versionName}-${variant.buildType.name}-${releaseTime()}.apk"
        }
    }

    dataBinding {
        enabled = true
    }

    viewBinding {
        enabled = true
    }

    // for com.google.androidbrowserhelper:androidbrowserhelper
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.2'

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.activity:activity-ktx:1.2.1'
    implementation 'androidx.fragment:fragment-ktx:1.3.1'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    //内存泄漏分析
//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.2'
//    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'

    implementation "androidx.paging:paging-runtime-ktx:$paging_version"

    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_livedata_ktx_version"

    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    implementation 'com.github.jixiaoyong:library:0.0.4'

    // network
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"

    // image loader
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    kapt 'com.github.bumptech.glide:compiler:4.12.0'

    // load url by chrome
    implementation 'com.google.androidbrowserhelper:androidbrowserhelper:1.3.2'
}
